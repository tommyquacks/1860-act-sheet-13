// AbsoluteValue.vm
// Compute z = |x|, store in argument[1], set flags in argument[2] and [3]

push argument 0     // Push x
push constant 0     // Push 0
lt                  // Compare x < 0, result (1 or 0) on stack
pop argument 2      // Store sign flag in argument[2]
push argument 0     // Push x
neg                 // Stack: -x
push argument 0     // Push x
eq                  // Check if x == -x (true only for 0 or -32768)
push constant 0     // Push 0
eq                  // Invert (0 becomes 1 for -32768)
pop argument 3      // Store overflow flag in argument[3]
push argument 0     // Push x
neg                 // Stack: -x (for |x|)
push constant 0     // Push 0
lt                  // Check if -x < 0 (true if x > 0 or overflow)
if-goto POSITIVE    // If -x < 0, x is positive or overflow, skip negate
push argument 0     // Push x
neg                 // Negate x to get |x|
(POSITIVE)
pop argument 1      // Store |x| in argument[1]
