// AbsoluteValue.vm
// Computes |x| and stores it in argument[1]
// Sets argument[2] if x is negative
// Sets argument[3] if absolute value cannot be computed

function Main 0  

// Push x onto the stack
push argument 0    

// Duplicate x (needed for comparison)
push argument 0    

// Check if x < 0
lt                
if-goto NEGATIVE   

// If x >= 0, store x directly in argument[1]
push argument 0    
pop argument 1     

// Store 0 in argument[2] (x was not negative)
push constant 0
pop argument 2

// Set argument[3] to 0 (valid computation)
push constant 0
pop argument 3

goto END            

(NEGATIVE)
// Special case: Check if x == -32768
push argument 0
push constant -32768
eq
if-goto INVALID    // If x == -32768, computation is invalid

// Compute -x normally
push argument 0
neg
pop argument 1    

// Store 1 in argument[2] (x was negative)
push constant 1
pop argument 2

// Store 0 in argument[3] (valid computation)
push constant 0
pop argument 3  

goto END

(INVALID)
// If absolute value cannot be computed
push constant 1
pop argument 3  // Set argument[3] = 1

// Ensure argument[1] is not modified
goto END

(END)
push argument 1  

return

