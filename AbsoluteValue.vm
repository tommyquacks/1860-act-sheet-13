// AbsoluteValue.vm
// Compute z = |x|, store in argument[1], set flags in argument[2] and [3]
push argument 0     // Push x (-10)
push constant 0     // Push 0
lt                  // Compare x < 0, result (1) on stack
pop argument 2      // Store sign flag (1) in argument[2] (RAM[502])
push argument 0     // Push x (-10)
neg                 // Stack: -(-10) = 10
push argument 0     // Push x (-10)
eq                  // Check if x == -x (false, -10 != 10), stack: 0
push constant 0     // Push 0
eq                  // Invert (0 == 0 is true, so 0 becomes 1), stack: 1
pop argument 3      // Store overflow flag (1) in argument[3] (RAM[503]) - ERROR HERE
push argument 0     // Push x (-10)
push argument 2     // Push sign flag (1)
if-goto NEGATE      // Since 1 (true), jump to NEGATE
goto END            // Skipped
(NEGATE)
neg                 // Negate x again: -(-10) = 10
(END)
pop argument 1      // Store 10 in argument[1] (RAM[501])
