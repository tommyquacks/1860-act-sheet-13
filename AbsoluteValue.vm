// AbsoluteValue.vm
push argument 0       // Stack: [x]
push constant 0       // Stack: [x, 0]
lt                    // Stack: [-1 if x < 0, else 0]
if-goto NEGATIVE      // Branch if x < 0
push argument 0       // Stack: [x]
pop argument 1        // argument[1] = x
push constant 0       // Stack: [0]
pop argument 2        // argument[2] = 0
push constant 0       // Stack: [0]
pop argument 3        // argument[3] = 0
goto END
label NEGATIVE
push argument 0       // Stack: [x]
neg                   // Stack: [-x]
pop temp 0            // Stack: [], temp0 = -x
push temp 0           // Stack: [-x]
push constant 0       // Stack: [-x, 0]
gt                    // Stack: [1 if -x > 0, else 0]
if-goto COMPUTABLE    // Branch if computable
push temp 0           // Stack: [-x]
pop argument 1        // argument[1] = -x
push constant 1       // Stack: [1]
pop argument 2        // argument[2] = 1
push constant 1       // Stack: [1]
pop argument 3        // argument[3] = 1
goto END
label COMPUTABLE
push temp 0           // Stack: [-x]
pop argument 1        // argument[1] = -x
push constant 1       // Stack: [1]
pop argument 2        // argument[2] = 1
push constant 0       // Stack: [0]
pop argument 3        // argument[3] = 0
label END

